{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "description": "AnsHost smart-query",
  "oneOf": [
    {
      "description": "Query the config Returns [`ConfigResponse`]",
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Queries assets based on name returns [`AssetsResponse`]",
      "type": "object",
      "required": [
        "assets"
      ],
      "properties": {
        "assets": {
          "type": "object",
          "required": [
            "names"
          ],
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Page over assets returns [`AssetListResponse`]",
      "type": "object",
      "required": [
        "asset_list"
      ],
      "properties": {
        "asset_list": {
          "type": "object",
          "properties": {
            "page_size": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint8",
              "minimum": 0.0
            },
            "page_token": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Queries contracts based on name returns [`ContractsResponse`]",
      "type": "object",
      "required": [
        "contracts"
      ],
      "properties": {
        "contracts": {
          "type": "object",
          "required": [
            "names"
          ],
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContractEntry"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Page over contracts returns [`ContractListResponse`]",
      "type": "object",
      "required": [
        "contract_list"
      ],
      "properties": {
        "contract_list": {
          "type": "object",
          "properties": {
            "page_size": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint8",
              "minimum": 0.0
            },
            "page_token": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ContractEntry"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Queries contracts based on name returns [`ChannelsResponse`]",
      "type": "object",
      "required": [
        "channels"
      ],
      "properties": {
        "channels": {
          "type": "object",
          "required": [
            "names"
          ],
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelEntry"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Page over contracts returns [`ChannelListResponse`]",
      "type": "object",
      "required": [
        "channel_list"
      ],
      "properties": {
        "channel_list": {
          "type": "object",
          "properties": {
            "page_size": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint8",
              "minimum": 0.0
            },
            "page_token": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ChannelEntry"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Retrieve the registered dexes returns [`RegisteredDexesResponse`]",
      "type": "object",
      "required": [
        "registered_dexes"
      ],
      "properties": {
        "registered_dexes": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Retrieve the pools with the specified keys returns [`PoolsResponse`] TODO: this may need to take a page_token and page_size for the return",
      "type": "object",
      "required": [
        "pools"
      ],
      "properties": {
        "pools": {
          "type": "object",
          "required": [
            "keys"
          ],
          "properties": {
            "keys": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DexAssetPairing"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Retrieve the (optionally-filtered) list of pools. returns [`PoolAddressListResponse`]",
      "type": "object",
      "required": [
        "pool_list"
      ],
      "properties": {
        "pool_list": {
          "type": "object",
          "properties": {
            "filter": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AssetPairingFilter"
                },
                {
                  "type": "null"
                }
              ]
            },
            "page_size": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint8",
              "minimum": 0.0
            },
            "page_token": {
              "anyOf": [
                {
                  "$ref": "#/definitions/DexAssetPairing"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get the pool metadatas for given pool ids returns [`PoolMetadatasResponse`]",
      "type": "object",
      "required": [
        "pool_metadatas"
      ],
      "properties": {
        "pool_metadatas": {
          "type": "object",
          "required": [
            "keys"
          ],
          "properties": {
            "keys": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UniquePoolId"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Retrieve the (optionally-filtered) list of pool metadatas returns [`PoolMetadataListResponse`]",
      "type": "object",
      "required": [
        "pool_metadata_list"
      ],
      "properties": {
        "pool_metadata_list": {
          "type": "object",
          "properties": {
            "filter": {
              "anyOf": [
                {
                  "$ref": "#/definitions/PoolMetadataFilter"
                },
                {
                  "type": "null"
                }
              ]
            },
            "page_size": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint8",
              "minimum": 0.0
            },
            "page_token": {
              "anyOf": [
                {
                  "$ref": "#/definitions/UniquePoolId"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AssetEntry": {
      "description": "May key to retrieve information on an asset",
      "type": "string"
    },
    "AssetPairingFilter": {
      "type": "object",
      "properties": {
        "asset_pair": {
          "description": "Filter by asset pair",
          "type": [
            "array",
            "null"
          ],
          "items": [
            {
              "$ref": "#/definitions/AssetEntry"
            },
            {
              "$ref": "#/definitions/AssetEntry"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        },
        "dex": {
          "description": "Filter by dex",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "ChannelEntry": {
      "description": "Key to get the Address of a connected_chain Use [`UncheckedChannelEntry`] to construct this type.",
      "type": "object",
      "required": [
        "connected_chain",
        "protocol"
      ],
      "properties": {
        "connected_chain": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "ContractEntry": {
      "description": "Key to get the Address of a contract Use [`UncheckedContractEntry`] to construct this type.",
      "type": "object",
      "required": [
        "contract",
        "protocol"
      ],
      "properties": {
        "contract": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "DexAssetPairing": {
      "description": "The key for an asset pairing Consists of the two assets and the dex name TODO: what if we made keys equal based on the two assets either way?",
      "type": "array",
      "items": [
        {
          "$ref": "#/definitions/AssetEntry"
        },
        {
          "$ref": "#/definitions/AssetEntry"
        },
        {
          "type": "string"
        }
      ],
      "maxItems": 3,
      "minItems": 3
    },
    "PoolMetadataFilter": {
      "description": "Filter on the pool metadatas",
      "type": "object",
      "properties": {
        "pool_type": {
          "description": "Filter by pool type",
          "anyOf": [
            {
              "$ref": "#/definitions/PoolType"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "PoolType": {
      "type": "string",
      "enum": [
        "ConstantProduct",
        "Stable",
        "Weighted",
        "LiquidityBootstrap"
      ]
    },
    "UniquePoolId": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    }
  }
}
